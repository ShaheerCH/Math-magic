// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button renders correctly Renders Button Correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        type="button"
      />
    </div>
  </body>,
  "container": <div>
    <button
      type="button"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Calculator renders correctly Renders Calculator Correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header>
        <h1>
          Math Magicians
        </h1>
        <nav>
          <a
            href="/"
          >
            Home
          </a>
          <a
            href="/Calculator"
          >
            Calculator
          </a>
          <a
            href="/Quote"
          >
            Quote
          </a>
        </nav>
      </header>
      <main
        class="calc"
      >
        <h2>
          Let's do some math!
        </h2>
        <article
          class="calculator"
        >
          <div
            class="screen"
          >
            0
          </div>
          <button
            class="btn-gray"
            type="button"
          >
            AC
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            +/-
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            %
          </button>
          <button
            class="btn-orange"
            type="button"
          >
            รท
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            7
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            8
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            9
          </button>
          <button
            class="btn-orange"
            type="button"
          >
            x
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            4
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            5
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            6
          </button>
          <button
            class="btn-orange"
            type="button"
          >
            -
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            1
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            2
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            3
          </button>
          <button
            class="btn-orange"
            type="button"
          >
            +
          </button>
          <button
            class="btn-gray zero"
            type="button"
          >
            0
          </button>
          <button
            class="btn-gray"
            type="button"
          >
            .
          </button>
          <button
            class="btn-orange"
            type="button"
          >
            =
          </button>
        </article>
      </main>
    </div>
  </body>,
  "container": <div>
    <header>
      <h1>
        Math Magicians
      </h1>
      <nav>
        <a
          href="/"
        >
          Home
        </a>
        <a
          href="/Calculator"
        >
          Calculator
        </a>
        <a
          href="/Quote"
        >
          Quote
        </a>
      </nav>
    </header>
    <main
      class="calc"
    >
      <h2>
        Let's do some math!
      </h2>
      <article
        class="calculator"
      >
        <div
          class="screen"
        >
          0
        </div>
        <button
          class="btn-gray"
          type="button"
        >
          AC
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          +/-
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          %
        </button>
        <button
          class="btn-orange"
          type="button"
        >
          รท
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          7
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          8
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          9
        </button>
        <button
          class="btn-orange"
          type="button"
        >
          x
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          4
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          5
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          6
        </button>
        <button
          class="btn-orange"
          type="button"
        >
          -
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          1
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          2
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          3
        </button>
        <button
          class="btn-orange"
          type="button"
        >
          +
        </button>
        <button
          class="btn-gray zero"
          type="button"
        >
          0
        </button>
        <button
          class="btn-gray"
          type="button"
        >
          .
        </button>
        <button
          class="btn-orange"
          type="button"
        >
          =
        </button>
      </article>
    </main>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Header renders correctly Renders Header Correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header>
        <h1>
          Math Magicians
        </h1>
        <nav>
          <a
            href="/"
          >
            Home
          </a>
          <a
            href="/Calculator"
          >
            Calculator
          </a>
          <a
            href="/Quote"
          >
            Quote
          </a>
        </nav>
      </header>
    </div>
  </body>,
  "container": <div>
    <header>
      <h1>
        Math Magicians
      </h1>
      <nav>
        <a
          href="/"
        >
          Home
        </a>
        <a
          href="/Calculator"
        >
          Calculator
        </a>
        <a
          href="/Quote"
        >
          Quote
        </a>
      </nav>
    </header>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Home renders correctly Renders Header Correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header>
        <h1>
          Math Magicians
        </h1>
        <nav>
          <a
            href="/"
          >
            Home
          </a>
          <a
            href="/Calculator"
          >
            Calculator
          </a>
          <a
            href="/Quote"
          >
            Quote
          </a>
        </nav>
      </header>
      <main
        class="home"
      >
        <h2>
          Welcome to our page!
        </h2>
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec tincidunt quis elit nec finibus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean cursus elit eget sem eleifend scelerisque nec et ex. Morbi non odio consequat, pellentesque neque vel, finibus ipsum. Maecenas vestibulum nisl tellus, sed scelerisque turpis tempor eu. Donec tempor nibh eget ligula accumsan pellentesque. Curabitur id convallis nulla. Praesent lectus tellus, vulputate eget blandit eget, consequat sit amet velit. Curabitur lectus magna, rutrum eu ante quis, ullamcorper vehicula nisi.
        </p>
        <p>
          Anim esse duis proident dolor. Eiusmod enim cupidatat nostrud quis et minim exercitation in incididunt amet esse aute. Sunt nostrud reprehenderit est reprehenderit commodo. Aute cillum aliquip enim occaecat amet. Excepteur minim mollit laborum fugiat. Esse sint nisi in ex consequat laborum culpa. Nostrud duis do dolore esse ullamco non velit ullamco deserunt sint.
        </p>
      </main>
    </div>
  </body>,
  "container": <div>
    <header>
      <h1>
        Math Magicians
      </h1>
      <nav>
        <a
          href="/"
        >
          Home
        </a>
        <a
          href="/Calculator"
        >
          Calculator
        </a>
        <a
          href="/Quote"
        >
          Quote
        </a>
      </nav>
    </header>
    <main
      class="home"
    >
      <h2>
        Welcome to our page!
      </h2>
      <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec tincidunt quis elit nec finibus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean cursus elit eget sem eleifend scelerisque nec et ex. Morbi non odio consequat, pellentesque neque vel, finibus ipsum. Maecenas vestibulum nisl tellus, sed scelerisque turpis tempor eu. Donec tempor nibh eget ligula accumsan pellentesque. Curabitur id convallis nulla. Praesent lectus tellus, vulputate eget blandit eget, consequat sit amet velit. Curabitur lectus magna, rutrum eu ante quis, ullamcorper vehicula nisi.
      </p>
      <p>
        Anim esse duis proident dolor. Eiusmod enim cupidatat nostrud quis et minim exercitation in incididunt amet esse aute. Sunt nostrud reprehenderit est reprehenderit commodo. Aute cillum aliquip enim occaecat amet. Excepteur minim mollit laborum fugiat. Esse sint nisi in ex consequat laborum culpa. Nostrud duis do dolore esse ullamco non velit ullamco deserunt sint.
      </p>
    </main>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Quote renders correctly Renders Header Correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header>
        <h1>
          Math Magicians
        </h1>
        <nav>
          <a
            href="/"
          >
            Home
          </a>
          <a
            href="/Calculator"
          >
            Calculator
          </a>
          <a
            href="/Quote"
          >
            Quote
          </a>
        </nav>
      </header>
      <main
        class="quote"
      >
        <blockquote>
          <p>
            Heisenberg "Whats My Name You are Goddamn right "
          </p>
        </blockquote>
      </main>
    </div>
  </body>,
  "container": <div>
    <header>
      <h1>
        Math Magicians
      </h1>
      <nav>
        <a
          href="/"
        >
          Home
        </a>
        <a
          href="/Calculator"
        >
          Calculator
        </a>
        <a
          href="/Quote"
        >
          Quote
        </a>
      </nav>
    </header>
    <main
      class="quote"
    >
      <blockquote>
        <p>
          Heisenberg "Whats My Name You are Goddamn right "
        </p>
      </blockquote>
    </main>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Screen renders correctly Renders Screen Correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="screen"
      >
        0
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="screen"
    >
      0
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
